<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">



    <context:component-scan base-package="com.zyf.controller">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!--   这四个步骤统一到了base.xml里面去了
        1. 引入配置文件
        2. 数据源的创建
        3. spring和MyBatis完美整合，不需要mybatis的配置映射文件 &ndash;&gt;
        4.dao包下，spring会自动扫描以下 &ndash;&gt;
    -->
    <import resource="base.xml"/>

    <!-- 5.spring事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- dubbo  p配置-->
    <context:component-scan base-package="com.zyf.soa.user">
    </context:component-scan>
    <import resource="classpath:dubbo-consumer.xml"/>


</beans>